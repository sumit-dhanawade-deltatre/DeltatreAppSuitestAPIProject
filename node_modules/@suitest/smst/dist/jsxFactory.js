"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.jsx=exports.assertUnknownTextNode=exports.assertUnknownSectionNode=exports.flatten=void 0;var unist_builder_1=__importDefault(require("unist-builder")),plainTypes=["text","code","subject","input"],isTextNode=function(e){return"object"==typeof e&&null!==e&&plainTypes.includes(e.type)};function normalizePlainChildren(e,t){return e.reduce((function(e,n){if(null==n)return e;"string"!=typeof n&&"boolean"!=typeof n&&"number"!=typeof n||(n=unist_builder_1.default(plainTypes.includes(t)?t:"text",String(n)));var r=e[e.length-1];return isTextNode(n)&&(null==r?void 0:r.type)===n.type?e.splice(e.length-1,1,{type:n.type,value:r.value+n.value}):e.push(n),e}),[])}exports.flatten=function(e){return Array.isArray(e)?e.reduce((function(e,t){return e.concat(exports.flatten(t))}),[]):[e]};var processTextNode=function(e){return normalizePlainChildren(exports.flatten([e]),"text")},processPropertyNode=function(e){var t=processTextNode(e.name);return isCodeBlockNode(e.expectedValue)?unist_builder_1.default("prop",{name:t,contentType:"block",expectedValue:e.expectedValue,comparator:e.comparator,status:e.status}):unist_builder_1.default("prop",{name:t,contentType:"inline",expectedValue:processTextNode(e.expectedValue),actualValue:e.actualValue,comparator:e.comparator,status:e.status})},isPropChildren=function(e){return e.every((function(e){return"prop"===e.type}))},isCodeBlockNode=function(e){return!Array.isArray(e)&&"object"==typeof e&&null!==e&&"code-block"===e.type},isTestLineNodeArray=function(e){return e.every((function(e){return"test-line"===e.type}))},assertUnknownIntrinsicElementType=function(e){throw new Error("Unknown intrinsic element type "+e)};function jsx(e,t){for(var n,r,o=[],s=2;s<arguments.length;s++)o[s-2]=arguments[s];var u=normalizePlainChildren(exports.flatten(o),e);switch(e){case"text":case"subject":case"input":case"code":return u[0];case"fragment":return u;case"link":var i=t.href,a=u[0];return unist_builder_1.default("link",{href:i},null!==(n=null==a?void 0:a.value)&&void 0!==n?n:"");case"code-block":var l=t,c=u[0],p=null!==(r=null==l?void 0:l.language)&&void 0!==r?r:"javascript";return unist_builder_1.default("code-block",{language:p},c.value);case"prop":return processPropertyNode(t);case"props":if(isPropChildren(u))return unist_builder_1.default("props",u);throw new TypeError("Props can only accept Prop as its child");case"condition":case"test-line":var d=t,f={title:processTextNode(d.title)};return d.status&&(f.status=d.status),unist_builder_1.default(e,f,u);case"test-line-result":var y=t;if(isTestLineNodeArray(u)&&1===u.length)return unist_builder_1.default("test-line-result",{status:y.status,message:processTextNode(y.message),screenshot:y.screenshot,docs:y.docs},u);throw new TypeError("TestLineResult expects a single child of type TestLine");default:return assertUnknownIntrinsicElementType(e)}}exports.assertUnknownSectionNode=function(e){throw new Error("Unknown node type: "+JSON.stringify(e))},exports.assertUnknownTextNode=function(e){throw new Error("Unknown plain text node: "+JSON.stringify(e))},exports.jsx=jsx;